use v6.d;
use Test;

use lib '.';
use lib './lib';

use Lingua::StopwordsISO;

plan 8;

# 1
isa-ok stopwords-iso('BG'), SetHash,
        'For BG.';

# 2
isa-ok stopwords-iso('Bulgarian'), SetHash,
        'For Bulgarian.';

# 3
is ([&] <а автентичен аз ако ала бе без>.map({ $_ ∈ stopwords-iso('BG') })), True,
        'Known Bulgarian stop words are in.';

# 4
is-deeply
        stopwords-iso('Bulgarian'),
        stopwords-iso('BG'),
        'Equivalence.';

# 5
is ([&] <a after before the>.map({ $_ ∈ stopwords-iso('English') })), True,
        'Known English stop words are in.';

# 6
isa-ok stopwords-iso(<Russian Czech ru bg pl>), Hash,
        'Language spec that is a list of strings.';

# 7
isa-ok stopwords-iso('all'), Hash,
        'Get all stopwords';

# 8
is stopwords-iso('all').elems, 58,
        'Expected number of languages';

done-testing;
